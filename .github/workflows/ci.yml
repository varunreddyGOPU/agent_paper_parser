name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install PyMuPDF  # Missing dependency
        pip install pytest pytest-asyncio httpx
    
    - name: Lint with ruff (if available)
      run: |
        pip install ruff || true
        ruff check . || echo "Ruff not configured, skipping lint"
      continue-on-error: true
    
    - name: Test import and basic functionality
      run: |
        python -c "from app.main import app; print('✓ FastAPI app can be imported')"
        python -c "from app.database import init_db; init_db(); print('✓ Database initialization works')"
        python -c "from app.qa import qa_router; print('✓ QA router can be imported')"
    
    - name: Run pytest (if tests exist)
      run: |
        if [ -d "tests" ] || find . -name "test_*.py" -o -name "*_test.py" | grep -q .; then
          pytest -v
        else
          echo "No tests found, skipping pytest"
        fi
      continue-on-error: true
    
    - name: Test server startup
      run: |
        timeout 30s uvicorn app.main:app --host 127.0.0.1 --port 8000 &
        sleep 10
        curl -f http://127.0.0.1:8000/docs || echo "Health check failed"
        pkill -f uvicorn || true

  build:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install PyMuPDF
    
    - name: Create distribution
      run: |
        mkdir -p dist
        tar -czf dist/agent_paper_parser-${{ github.sha }}.tar.gz \
          --exclude='.git' \
          --exclude='.github' \
          --exclude='__pycache__' \
          --exclude='*.pyc' \
          --exclude='venv' \
          --exclude='.env' \
          --exclude='*.db' \
          .
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: agent_paper_parser-build
        path: dist/
        retention-days: 30